Different Types of Authentication 

1>Basic Authentication
a>NonPreemptive
Base 64 encoding
b>Preemptive
Base 64 encoding



2>Digest Authentication

We can use different encryption Algorithms over here 


3>Bearer Token Authentication

07824646f33266c8831320fbae029d939ba21bf5fb615fb110fd3b425ac076c3


4>API Key Authentication

API keys are the unique string of characters that will be used to authenticate users and allow them to access the API 

The key is generated by the server and is handed to client 

The client then send the key along with the request to the server so the server will use the request to validate the user 


https://openweathermap.org/current


https://api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}


5>OAuth 1.0
5>OAuth 2.0


https://api-m.sandbox.paypal.com/v1/oauth2/token ------------ To get access token

https://api-m.sandbox.paypal.com/v1/invoicing/invoices


ASyStlg4z4BjlmHNrXnDSLwFzY6j8NwPPE16opmTNUxHYf1IXRThQgb3ZN9uWeq3byeJPHlGXp_Gk2f7

ECKYHfIutJTW9x6PgRFePjsHJPH5MAomf34tbLqp7xmeckGaZGwM083k7ZHrY1cSnW18IYZcNKOH_chu

    "access_token": "A21AAJXFQaektLMsNYYDRLnW0yO0_W4Lg0ZJu_i4-wHJy2R98AmkLXJzMDloYTOfjyUVGU6dAYw8llSw3M267Z_R1dTgHTyNw",





  "scope": "https://uri.paypal.com/services/payments/futurepayments https://uri.paypal.com/services/invoicing https://uri.paypal.com/services/disputes/read-buyer https://uri.paypal.com/services/payments/realtimepayment https://uri.paypal.com/services/disputes/update-seller https://uri.paypal.com/services/payments/payment/authcapture openid https://uri.paypal.com/services/disputes/read-seller https://uri.paypal.com/services/payments/refund https://api.paypal.com/v1/vault/credit-card https://api.paypal.com/v1/payments/.* https://uri.paypal.com/payments/payouts https://api.paypal.com/v1/vault/credit-card/.* https://uri.paypal.com/services/subscriptions https://uri.paypal.com/services/applications/webhooks",
    "client_id": "ASyStlg4z4BjlmHNrXnDSLwFzY6j8NwPPE16opmTNUxHYf1IXRThQgb3ZN9uWeq3byeJPHlGXp_Gk2f7",
    "expires_in": "32379"












SessionFilter sessionFilter = new SessionFilter();


given().
         auth().form("John", "Doe").
         filter(sessionFilter).
 expect().
          statusCode(200).
 when().
        get("/x");




 given().
         filter(sessionFilter). // Reuse the same session filter instance to automatically apply the session id from the previous response
 expect().
          statusCode(200).
 when().
        get("/y");



